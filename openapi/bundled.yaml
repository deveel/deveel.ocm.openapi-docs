openapi: 3.0.3
info:
  title: Deveel OCM API
  version: v1
  description: "# Omni-Channel Messaging\r\nThe interface provided by this system supports a unified messaging experience, allowing users to send or receive messages through multiple types of messaging channels (eg. _SMS_, _WhatsApp_, _E-mail_, etc.).\r\n\r\nMessages that go from a client application of Deveel OCM to an individual are named _outbound messages_, while the messages incoming from individuals to a client application (through webhook callbacks) are named _inbound messages_: it will be possible to find several time in these documents reference to such directions.  \r\n\r\n## Outbound Messaging\r\nSending messages to individuals requires the integration of the messaging APIs that support a unified design, independently from the channels, and their typical idiosynchrasies.\r\n\r\nApplications must specify, for every message, at least the following information to be able to send messages:\r\n* **Sender** - An authorized terminal (eg. _e-mail address_, _alpha-numeric label_, _telephone number_, etc.) that is displayed to the receiver as the sender of the message \r\n* **Receiver** - The terminal belonging to an individual that is receiving the message\r\n* **Content** - A channel-aware content of the message\r\n* **Channel** - The name of the pre-configured channel used to transport the message (**note**: this must be previously provisioned by Deveel)\r\n\r\nPlease refer to the [Single Message Send](#operation/message_send) or [Batch Message Send](#operation/message_batchSend) operations for more details\r\n\r\n## Inbound Messaging\r\n\r\n# Webhooks\r\n\r\n## Message State Changes\r\n\r\nThe system produces a set of HTTP callbacks (_webhooks_), to inform subscribing applications of the changes of state of a message that was previously sent through the APIs.\r\n\r\nThe payload of the callback (an HTTP request) is typically composed of the following elements:\r\n\r\n| Property   | Description |\r\n|------------|-------------|\r\n| messageId  | The unique identifier provided as response from the messaging APIs\r\n| statusCode | Indiates the status of the message\r\n\r\n### Message Queued\r\nThis callback notifies the listening application that a message was queued and it will be processed soon.\r\n\r\n```json\r\n{\r\n    \"statusCode\": \"QUEUED\",\r\n    \"messageId\": \"a28fe2bb188642c8b175f816fa32aa0e\",\r\n    \"channelName\": \"channel-1\",\r\n    \"context\": {\r\n        \"prop1\": \"value1\",\r\n        \"prop2\": 33,\r\n        ...\r\n    }\r\n    ...\r\n}\r\n```\r\n\r\n### Message Sent\r\n\r\nThis callback notifies that the given message was sent through the channel and we are waiting to know if it was _delivered_ or if its _delivery failed_.\r\n\r\n```json\r\n{\r\n    \"statusCode\": \"SENT\",\r\n    \"messageId\": \"a28fe2bb188642c8b175f816fa32aa0e\",\r\n    \"channelName\": \"channel-1\",\r\n    \"context\": {\r\n        \"prop1\": \"value\",\r\n        ...\r\n    }\r\n}\r\n```\r\n\r\n### Message Delivery Retried\r\n\r\n### Message Delivery Failed\r\n\r\n### Message Delivered\r\n\r\n## Inbound Messages\r\n\r\n# Pre-Requisites\r\n\r\nAccessing the Messaging APIs and eventually consuming the webhooks produced by the system requires some pre-requisites, in terms of security (_tenant_, _user credentials_) and provisioned configurations (_channels_, _quotas_).\r\n\r\n## User Credentials\r\n\r\nBefore you can start consuming the APIs provided by Deveel OCM you must obtain valid credentials for the supported authentication schemes (at today, just _OAuth2 Client Credentials_).\r\n\r\nContact _info@deveel.com_ to request for the creation of a valid user\r\n\r\n### Authentication\r\nClient applications and users must be authenticated using one of the following security schemes\r\n\r\n<SecurityDefinitions />\r\n\r\n# Errors\r\n\r\nWe follow the error response format proposed in [RFC 7807](https://tools.ietf.org/html/rfc7807)\r\nalso known as Problem Details for HTTP APIs.  As with our normal API responses,\r\nyour client must be prepared to gracefully handle additional members of the response.\r\n\r\nAn example of the JSON payload of such errors is the following:\r\n\r\n```json\r\n{\r\n    \"type\": \"https://ocm.deveel.net/errors/channel-not-found\",\r\n    \"status\": 404,\r\n    \"title\": \"Channel Not Found\",\r\n    \"details\": \"The channel 'test-channel' was not found in the context of the tenant '302a06b789b747eeb313a82ed5e6a218'\",\r\n    \"code\": \"CHANNEL_NOT_FOUND\"\r\n}\r\n```"
  contact:
    name: Antonello Provenzano
    email: antonello@deveel.com
  license:
    name: Deveel EULA
    url: 'https://docs.ocm.deveel.net/LICENSE.html'
  x-logo:
    url: 'https://github.com/deveel/deveel.ocm.openapi-docs/raw/main/deveel-logo.png'
servers:
  - url: 'https://api.ocm.deveel.net'
paths:
  /message/batch:
    post:
      tags:
        - message
      summary: Sends a batch of Messages
      description: ''
      operationId: message_batchSend
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/MessageBatch'
          application/json:
            schema:
              $ref: '#/components/schemas/MessageBatch'
          text/json:
            schema:
              $ref: '#/components/schemas/MessageBatch'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MessageBatch'
      responses:
        '202':
          description: All the messages in the batch were accepted for processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBatchResult'
            text/json:
              schema:
                $ref: '#/components/schemas/MessageBatchResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: The request is unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: The requested action is forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: >-
            One of the entities referenced in the message was not found in the
            tenant space
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '405':
          description: One of the channels is not enabled for the tenant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '415':
          description: One of the media passed in a message is not supported
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too many messages in the batch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
        - oauth2:
            - 'message:send'
  /message:
    post:
      tags:
        - message
      summary: Sends a single Message
      description: ''
      operationId: message_send
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Message'
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
          text/json:
            schema:
              $ref: '#/components/schemas/Message'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Message'
      responses:
        '202':
          description: The message is under processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResult'
            text/json:
              schema:
                $ref: '#/components/schemas/MessageResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: The request is unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: The requested action is forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: >-
            One of the entities referenced in the message was not found in the
            tenant space
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '405':
          description: One of the channels is not enabled for the tenant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '415':
          description: One of the media passed in a message is not supported
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
        - oauth2:
            - 'message:send'
  /message/receiver:
    post:
      tags:
        - message
      summary: Adds a new Receiver of Incoming Messages
      operationId: message_addReceiver
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewMessageReceiver'
          text/json:
            schema:
              $ref: '#/components/schemas/NewMessageReceiver'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NewMessageReceiver'
        required: true
      responses:
        '201':
          description: The receiver was created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MessageReceiver'
            application/json:
              schema:
                $ref: '#/components/schemas/MessageReceiver'
            text/json:
              schema:
                $ref: '#/components/schemas/MessageReceiver'
        '400':
          description: The request is invalid
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: The request is unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: The requested action is forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: The channel was not found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '405':
          description: The channel does not support inbound messaging
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: An unknown error occurred
      security:
        - oauth2:
            - 'message:receive'
  '/message/receiver/{id}':
    get:
      tags:
        - message
      summary: Gets a Receiver of Incoming Messages
      operationId: message_getReceiver
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: The receiver with the given ID was found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MessageReceiver'
            application/json:
              schema:
                $ref: '#/components/schemas/MessageReceiver'
            text/json:
              schema:
                $ref: '#/components/schemas/MessageReceiver'
        '401':
          description: The request is unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: The requested action is forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: No receiver was found with the given ID
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: An unknown error occurred
      security:
        - oauth2:
            - 'message:receive'
components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'https://deveel.eu.auth0.com/oauth/token'
          scopes:
            'message:send': Send messages to individuals
            'message:receive': Receive messages from individuals
  schemas:
    SenderTerminal:
      type: object
      properties:
        label:
          minLength: 2
          pattern: '^[a-zA-Z][a-zA-Z0-9]*$'
          type: string
          nullable: true
        email:
          type: string
          format: email
          nullable: true
        displayName:
          type: string
          nullable: true
        number:
          type: string
          format: tel
          nullable: true
      additionalProperties: false
    ReceiverTerminal:
      type: object
      properties:
        email:
          type: string
          format: email
          nullable: true
        displayName:
          type: string
          nullable: true
        number:
          type: string
          format: tel
          nullable: true
      additionalProperties: false
    MediaContent:
      required:
        - mediaType
        - source
      type: object
      properties:
        mediaType:
          type: string
        source:
          type: string
      additionalProperties: false
    AttachmentType:
      enum:
        - inline
        - file
      type: string
      x-ms-enum:
        name: AttachmentType
        modelAsString: true
    Attachment:
      required:
        - content
        - id
      type: object
      properties:
        id:
          type: string
        content:
          type: string
        contentType:
          type: string
          nullable: true
        fileName:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/AttachmentType'
      additionalProperties: false
    ContentPart:
      type: object
      properties:
        html:
          minLength: 1
          type: string
          nullable: true
        text:
          minLength: 1
          type: string
          nullable: true
        embed:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
          nullable: true
      additionalProperties: false
    MessageContent:
      type: object
      properties:
        text:
          minLength: 1
          type: string
          nullable: true
        html:
          minLength: 1
          type: string
          nullable: true
        media:
          $ref: '#/components/schemas/MediaContent'
        parts:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ContentPart'
          nullable: true
        embed:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
          nullable: true
      additionalProperties: false
    FallbackMessage:
      required:
        - channel
        - content
        - receiver
        - sender
      type: object
      properties:
        sender:
          $ref: '#/components/schemas/SenderTerminal'
        receiver:
          $ref: '#/components/schemas/ReceiverTerminal'
        channel:
          type: string
        content:
          $ref: '#/components/schemas/MessageContent'
        options:
          type: object
          additionalProperties: {}
          nullable: true
        fallback:
          $ref: '#/components/schemas/FallbackMessage'
      additionalProperties: {}
    Message:
      required:
        - channel
        - content
        - receiver
        - sender
      type: object
      properties:
        sender:
          $ref: '#/components/schemas/SenderTerminal'
        receiver:
          $ref: '#/components/schemas/ReceiverTerminal'
        channel:
          type: string
        content:
          $ref: '#/components/schemas/MessageContent'
        context:
          type: object
          additionalProperties: {}
          nullable: true
        options:
          type: object
          additionalProperties: {}
          nullable: true
        fallback:
          $ref: '#/components/schemas/FallbackMessage'
      additionalProperties: {}
    MessageBatch:
      required:
        - messages
      type: object
      properties:
        context:
          type: object
          additionalProperties: {}
          nullable: true
        messages:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Message'
      additionalProperties: false
    FallbackMessageResult:
      required:
        - messageId
      type: object
      properties:
        messageId:
          type: string
        fallback:
          $ref: '#/components/schemas/FallbackMessageResult'
      additionalProperties: false
    MessageResult:
      required:
        - messageId
      type: object
      properties:
        messageId:
          type: string
        context:
          type: object
          additionalProperties: {}
          nullable: true
        fallback:
          $ref: '#/components/schemas/FallbackMessageResult'
      additionalProperties: false
    MessageBatchResult:
      required:
        - batchId
      type: object
      properties:
        batchId:
          type: string
        context:
          type: object
          additionalProperties: {}
          nullable: true
        messages:
          type: array
          items:
            $ref: '#/components/schemas/MessageResult'
          nullable: true
      additionalProperties: false
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: {}
    NewMessageReceiver:
      required:
        - channelName
        - destinationUrl
        - to
      type: object
      properties:
        channelName:
          type: string
        destinationUrl:
          type: string
          format: uri
        secret:
          type: string
          nullable: true
        filter:
          type: string
          nullable: true
        headers:
          type: object
          additionalProperties:
            type: string
          nullable: true
        to:
          type: string
      additionalProperties: false
    MessageReceiver:
      required:
        - channelName
        - destinationUrl
        - id
        - to
      type: object
      properties:
        channelName:
          type: string
        destinationUrl:
          type: string
          format: uri
        secret:
          type: string
          nullable: true
        filter:
          type: string
          nullable: true
        headers:
          type: object
          additionalProperties:
            type: string
          nullable: true
        id:
          type: string
        to:
          type: string
      additionalProperties: false
